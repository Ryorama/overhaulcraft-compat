buildscript {
    repositories {
        maven { url = 'https://repo.spongepowered.org/repository/maven-public/' }
    }
    dependencies {
        classpath 'org.spongepowered:mixingradle:0.7-SNAPSHOT'
        classpath 'org.parchmentmc:librarian:1.+'
    }
}

plugins {
    id 'idea'
    id 'eclipse'
    id 'net.minecraftforge.gradle' version '[6.0.16,6.2)'
    id 'org.jetbrains.kotlin.jvm' version '1.9.22'
    id 'org.jetbrains.kotlin.plugin.serialization' version '1.9.22'
    id "at.stnwtr.gradle-secrets-plugin" version "1.0.1"
}

version = '1.0'
group = 'com.ryorama.tstp_content'
archivesBaseName = 'tstp_content'

apply plugin: 'org.spongepowered.mixin'
apply plugin: 'org.parchmentmc.librarian.forgegradle'

mixin {
    add sourceSets.main, "tstp_content.mixins.refmap.json"
}

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

jarJar.enable()

reobf {
    jarJar {}
}

tasks.jarJar.finalizedBy('reobfJarJar')

tasks.jarJar.configure {
    archiveClassifier.set('')
}

jar {
    archiveClassifier.set('slim')
}

minecraft {
    mappings channel: 'official', version: '1.20.1'

    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    copyIdeResources = true

    runs {
        client {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"
            arg "--mixin=tstp_content.mixins.json"

            mods {
                "${mod_id}" {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"
            arg "--mixin=tstp_content.mixins.json"

            mods {
                "${mod_id}" {
                    source sourceSets.main
                }
            }
        }
        data {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"
            arg "--mixin=tstp_content.mixins.json"

            args '--mod', mod_id, '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

            mods {
                "${mod_id}" {
                    source sourceSets.main
                }
            }
        }
    }
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    flatDir {
        dirs 'libs'
    }
    maven { url = 'https://maven.minecraftforge.net/' }
    maven {
        name = 'GeckoLib'
        url 'https://dl.cloudsmith.io/public/geckolib3/geckolib/maven/'
        content {
            includeGroupByRegex("software\\.bernie.*")
            includeGroup("com.eliotlash.mclib")
        }
    }
    maven {
        url 'https://maven.teamresourceful.com/repository/maven-public/'
    }
    maven {
        url "https://cursemaven.com"
    }
    maven {
        name = "Valkyrien Skies Internal"
        url = 'https://maven.valkyrienskies.org'
    }
    maven {
        name = 'Kotlin for Forge'
        url = 'https://thedarkcolour.github.io/KotlinForForge/'
    }
    maven {
        url "https://maven.tterrag.com/"
    }
    maven { url "https://maven.shedaniel.me/" }
    maven {
        url = "https://maven.theillusivec4.top/"
    }
    exclusiveContent {
        forRepository {
            maven {
                name = "Modrinth"
                url = "https://api.modrinth.com/maven"
            }
        }
        filter {
            includeGroup "maven.modrinth"
        }
    }
    maven {
        name "Modding Legacy Maven"
        url "https://maven.moddinglegacy.com/maven"
    }
    maven {
        url = "https://maven.realrobotix.me/master/"
        content {
            includeGroup("com.rbasamoyai")
        }
    }
    mavenLocal()
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.20.1-47.2.0'

    implementation fg.deobf("curse.maven:valkyrien-skies-258371:5212232")
    implementation fg.deobf("com.ryorama.terrariamod:terrariamod-forge:${rootProject.terrariamod_version}")
    implementation fg.deobf("net.lointain.cosmos:Cosmic-Horizons:0.0.6.5")
    implementation fg.deobf("net.pixelbank.burnt:burnt:1.8.3")
    implementation fg.deobf("com.jozufozu.flywheel:flywheel-forge-1.20.1:${flywheel_version}")
    implementation fg.deobf("com.simibubi.create:create-1.20.1:${create_version}:slim") { transitive = false }
    implementation fg.deobf("com.legacy:structure-gel:1.20.1-2.16.2")
    implementation fg.deobf("com.rbasamoyai:ritchiesprojectilelib:2.0.0-dev+mc.1.20.1-forge-build.182") { transitive = false }
    implementation fg.deobf("com.rbasamoyai:createbigcannons:5.6.0-dev+mc.1.20.1-forge-build.111")
    implementation fg.deobf("java.net.luke100000:minecraft-comes-alive:7.5.21")
    implementation 'thedarkcolour:kotlinforforge:4.10.0'
    implementation(jarJar("io.github.llamalad7:mixinextras-forge:0.4.1")) {
        jarJar.ranged(it, "[0.4.1,)")
    }

    implementation fg.deobf("curse.maven:refurbished-furniture-897116:5893833")
    implementation fg.deobf('curse.maven:toughasnails-246391:4750298')
    implementation fg.deobf('curse.maven:firstaid-276837:5127567')
    implementation fg.deobf('curse.maven:geckolib-388172:5386948')
    implementation fg.deobf("curse.maven:hamsters-952435:5121305")
    implementation fg.deobf('curse.maven:ballistix-443915:5022909')
    implementation fg.deobf('curse.maven:electrodynamics-316867:5022907')
    implementation fg.deobf('curse.maven:nuclearscience-318646:5022908')
    implementation fg.deobf('curse.maven:framework-549225:5680064')
    implementation fg.deobf('curse.maven:potion_master-356801:4722415')
    implementation fg.deobf('curse.maven:cuisine_delight-893541:5300072')
    implementation fg.deobf('curse.maven:farmers_delight-398521:5051242')
    implementation fg.deobf('curse.maven:bos-757062:4727499')
    implementation fg.deobf('curse.maven:architectury-419699:5137938')
    implementation fg.deobf('curse.maven:butchery-973620:5746912')
    implementation fg.deobf('curse.maven:randomium-523013:5431202')
    implementation fg.deobf("curse.maven:alexs-caves-924854:5831476")
    implementation fg.deobf("curse.maven:cbc-nuclear-1060244:5678978")
    implementation fg.deobf("curse.maven:citadel-331936:5633260")
    implementation fg.deobf("curse.maven:configuration-444699:4710266")
    implementation fg.deobf("curse.maven:deeperdarker-659011:5698212")
    implementation fg.deobf("curse.maven:haunted-harvest-541753:5212692")
    implementation fg.deobf("curse.maven:crackers-wither-storm-mod-621405:5619741")
    implementation fg.deobf("curse.maven:selene-499980:5863085")
    implementation fg.deobf("curse.maven:mekanism-268560:5662583")
    implementation fg.deobf("curse.maven:mrcrayfishs-gun-mod-unofficial-945471:5610926")
    implementation fg.deobf("curse.maven:easy-villagers-400514:5724570")
    implementation fg.deobf("curse.maven:ato-405593:5348605")
    implementation fg.deobf("curse.maven:create-clockwork-807792:5580456")

    compileOnly("org.valkyrienskies.core:api:${rootProject.vs_core_version}")
    compileOnly("org.valkyrienskies.core:api-game:${rootProject.vs_core_version}")
    compileOnly("org.valkyrienskies.core:util:${rootProject.vs_core_version}")
    compileOnly("org.valkyrienskies.core:impl:${rootProject.vs_core_version}")
    compileOnly(annotationProcessor("io.github.llamalad7:mixinextras-common:0.4.1"))
    annotationProcessor 'org.spongepowered:mixin:0.8.+:processor'
}

jar {
    from('/') {
        include 'LICENSE.txt'
    }

    manifest {
        attributes([
                "Specification-Title": "tstp_content",
                "Specification-Vendor": "Ryorama",
                "Specification-Version": "1", // We are version 1 of ourselves
                "Implementation-Title": project.name,
                "Implementation-Version": project.version,
                "Implementation-Vendor" :"Ryorama",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
                "MixinConfigs": "tstp_content.mixins.json"
        ])
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8' // Use the UTF-8 charset for Java compilation
}